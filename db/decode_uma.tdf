--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=25 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 17.1 cbx_cycloneii 2017:10:25:18:06:53:SJ cbx_lpm_add_sub 2017:10:25:18:06:53:SJ cbx_lpm_compare 2017:10:25:18:06:53:SJ cbx_lpm_decode 2017:10:25:18:06:53:SJ cbx_mgl 2017:10:25:18:08:29:SJ cbx_nadder 2017:10:25:18:06:53:SJ cbx_stratix 2017:10:25:18:06:53:SJ cbx_stratixii 2017:10:25:18:06:53:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_uma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[24..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[24..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3380w[2..0]	: WIRE;
	w_anode3393w[3..0]	: WIRE;
	w_anode3410w[3..0]	: WIRE;
	w_anode3420w[3..0]	: WIRE;
	w_anode3430w[3..0]	: WIRE;
	w_anode3440w[3..0]	: WIRE;
	w_anode3450w[3..0]	: WIRE;
	w_anode3460w[3..0]	: WIRE;
	w_anode3470w[3..0]	: WIRE;
	w_anode3482w[2..0]	: WIRE;
	w_anode3491w[3..0]	: WIRE;
	w_anode3502w[3..0]	: WIRE;
	w_anode3512w[3..0]	: WIRE;
	w_anode3522w[3..0]	: WIRE;
	w_anode3532w[3..0]	: WIRE;
	w_anode3542w[3..0]	: WIRE;
	w_anode3552w[3..0]	: WIRE;
	w_anode3562w[3..0]	: WIRE;
	w_anode3573w[2..0]	: WIRE;
	w_anode3582w[3..0]	: WIRE;
	w_anode3593w[3..0]	: WIRE;
	w_anode3603w[3..0]	: WIRE;
	w_anode3613w[3..0]	: WIRE;
	w_anode3623w[3..0]	: WIRE;
	w_anode3633w[3..0]	: WIRE;
	w_anode3643w[3..0]	: WIRE;
	w_anode3653w[3..0]	: WIRE;
	w_anode3664w[2..0]	: WIRE;
	w_anode3673w[3..0]	: WIRE;
	w_anode3684w[3..0]	: WIRE;
	w_anode3694w[3..0]	: WIRE;
	w_anode3704w[3..0]	: WIRE;
	w_anode3714w[3..0]	: WIRE;
	w_anode3724w[3..0]	: WIRE;
	w_anode3734w[3..0]	: WIRE;
	w_anode3744w[3..0]	: WIRE;
	w_data3378w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[24..0] = eq_wire[24..0];
	eq_wire[] = ( ( w_anode3744w[3..3], w_anode3734w[3..3], w_anode3724w[3..3], w_anode3714w[3..3], w_anode3704w[3..3], w_anode3694w[3..3], w_anode3684w[3..3], w_anode3673w[3..3]), ( w_anode3653w[3..3], w_anode3643w[3..3], w_anode3633w[3..3], w_anode3623w[3..3], w_anode3613w[3..3], w_anode3603w[3..3], w_anode3593w[3..3], w_anode3582w[3..3]), ( w_anode3562w[3..3], w_anode3552w[3..3], w_anode3542w[3..3], w_anode3532w[3..3], w_anode3522w[3..3], w_anode3512w[3..3], w_anode3502w[3..3], w_anode3491w[3..3]), ( w_anode3470w[3..3], w_anode3460w[3..3], w_anode3450w[3..3], w_anode3440w[3..3], w_anode3430w[3..3], w_anode3420w[3..3], w_anode3410w[3..3], w_anode3393w[3..3]));
	w_anode3380w[] = ( (w_anode3380w[1..1] & (! data_wire[4..4])), (w_anode3380w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3393w[] = ( (w_anode3393w[2..2] & (! w_data3378w[2..2])), (w_anode3393w[1..1] & (! w_data3378w[1..1])), (w_anode3393w[0..0] & (! w_data3378w[0..0])), w_anode3380w[2..2]);
	w_anode3410w[] = ( (w_anode3410w[2..2] & (! w_data3378w[2..2])), (w_anode3410w[1..1] & (! w_data3378w[1..1])), (w_anode3410w[0..0] & w_data3378w[0..0]), w_anode3380w[2..2]);
	w_anode3420w[] = ( (w_anode3420w[2..2] & (! w_data3378w[2..2])), (w_anode3420w[1..1] & w_data3378w[1..1]), (w_anode3420w[0..0] & (! w_data3378w[0..0])), w_anode3380w[2..2]);
	w_anode3430w[] = ( (w_anode3430w[2..2] & (! w_data3378w[2..2])), (w_anode3430w[1..1] & w_data3378w[1..1]), (w_anode3430w[0..0] & w_data3378w[0..0]), w_anode3380w[2..2]);
	w_anode3440w[] = ( (w_anode3440w[2..2] & w_data3378w[2..2]), (w_anode3440w[1..1] & (! w_data3378w[1..1])), (w_anode3440w[0..0] & (! w_data3378w[0..0])), w_anode3380w[2..2]);
	w_anode3450w[] = ( (w_anode3450w[2..2] & w_data3378w[2..2]), (w_anode3450w[1..1] & (! w_data3378w[1..1])), (w_anode3450w[0..0] & w_data3378w[0..0]), w_anode3380w[2..2]);
	w_anode3460w[] = ( (w_anode3460w[2..2] & w_data3378w[2..2]), (w_anode3460w[1..1] & w_data3378w[1..1]), (w_anode3460w[0..0] & (! w_data3378w[0..0])), w_anode3380w[2..2]);
	w_anode3470w[] = ( (w_anode3470w[2..2] & w_data3378w[2..2]), (w_anode3470w[1..1] & w_data3378w[1..1]), (w_anode3470w[0..0] & w_data3378w[0..0]), w_anode3380w[2..2]);
	w_anode3482w[] = ( (w_anode3482w[1..1] & (! data_wire[4..4])), (w_anode3482w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3491w[] = ( (w_anode3491w[2..2] & (! w_data3378w[2..2])), (w_anode3491w[1..1] & (! w_data3378w[1..1])), (w_anode3491w[0..0] & (! w_data3378w[0..0])), w_anode3482w[2..2]);
	w_anode3502w[] = ( (w_anode3502w[2..2] & (! w_data3378w[2..2])), (w_anode3502w[1..1] & (! w_data3378w[1..1])), (w_anode3502w[0..0] & w_data3378w[0..0]), w_anode3482w[2..2]);
	w_anode3512w[] = ( (w_anode3512w[2..2] & (! w_data3378w[2..2])), (w_anode3512w[1..1] & w_data3378w[1..1]), (w_anode3512w[0..0] & (! w_data3378w[0..0])), w_anode3482w[2..2]);
	w_anode3522w[] = ( (w_anode3522w[2..2] & (! w_data3378w[2..2])), (w_anode3522w[1..1] & w_data3378w[1..1]), (w_anode3522w[0..0] & w_data3378w[0..0]), w_anode3482w[2..2]);
	w_anode3532w[] = ( (w_anode3532w[2..2] & w_data3378w[2..2]), (w_anode3532w[1..1] & (! w_data3378w[1..1])), (w_anode3532w[0..0] & (! w_data3378w[0..0])), w_anode3482w[2..2]);
	w_anode3542w[] = ( (w_anode3542w[2..2] & w_data3378w[2..2]), (w_anode3542w[1..1] & (! w_data3378w[1..1])), (w_anode3542w[0..0] & w_data3378w[0..0]), w_anode3482w[2..2]);
	w_anode3552w[] = ( (w_anode3552w[2..2] & w_data3378w[2..2]), (w_anode3552w[1..1] & w_data3378w[1..1]), (w_anode3552w[0..0] & (! w_data3378w[0..0])), w_anode3482w[2..2]);
	w_anode3562w[] = ( (w_anode3562w[2..2] & w_data3378w[2..2]), (w_anode3562w[1..1] & w_data3378w[1..1]), (w_anode3562w[0..0] & w_data3378w[0..0]), w_anode3482w[2..2]);
	w_anode3573w[] = ( (w_anode3573w[1..1] & data_wire[4..4]), (w_anode3573w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3582w[] = ( (w_anode3582w[2..2] & (! w_data3378w[2..2])), (w_anode3582w[1..1] & (! w_data3378w[1..1])), (w_anode3582w[0..0] & (! w_data3378w[0..0])), w_anode3573w[2..2]);
	w_anode3593w[] = ( (w_anode3593w[2..2] & (! w_data3378w[2..2])), (w_anode3593w[1..1] & (! w_data3378w[1..1])), (w_anode3593w[0..0] & w_data3378w[0..0]), w_anode3573w[2..2]);
	w_anode3603w[] = ( (w_anode3603w[2..2] & (! w_data3378w[2..2])), (w_anode3603w[1..1] & w_data3378w[1..1]), (w_anode3603w[0..0] & (! w_data3378w[0..0])), w_anode3573w[2..2]);
	w_anode3613w[] = ( (w_anode3613w[2..2] & (! w_data3378w[2..2])), (w_anode3613w[1..1] & w_data3378w[1..1]), (w_anode3613w[0..0] & w_data3378w[0..0]), w_anode3573w[2..2]);
	w_anode3623w[] = ( (w_anode3623w[2..2] & w_data3378w[2..2]), (w_anode3623w[1..1] & (! w_data3378w[1..1])), (w_anode3623w[0..0] & (! w_data3378w[0..0])), w_anode3573w[2..2]);
	w_anode3633w[] = ( (w_anode3633w[2..2] & w_data3378w[2..2]), (w_anode3633w[1..1] & (! w_data3378w[1..1])), (w_anode3633w[0..0] & w_data3378w[0..0]), w_anode3573w[2..2]);
	w_anode3643w[] = ( (w_anode3643w[2..2] & w_data3378w[2..2]), (w_anode3643w[1..1] & w_data3378w[1..1]), (w_anode3643w[0..0] & (! w_data3378w[0..0])), w_anode3573w[2..2]);
	w_anode3653w[] = ( (w_anode3653w[2..2] & w_data3378w[2..2]), (w_anode3653w[1..1] & w_data3378w[1..1]), (w_anode3653w[0..0] & w_data3378w[0..0]), w_anode3573w[2..2]);
	w_anode3664w[] = ( (w_anode3664w[1..1] & data_wire[4..4]), (w_anode3664w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3673w[] = ( (w_anode3673w[2..2] & (! w_data3378w[2..2])), (w_anode3673w[1..1] & (! w_data3378w[1..1])), (w_anode3673w[0..0] & (! w_data3378w[0..0])), w_anode3664w[2..2]);
	w_anode3684w[] = ( (w_anode3684w[2..2] & (! w_data3378w[2..2])), (w_anode3684w[1..1] & (! w_data3378w[1..1])), (w_anode3684w[0..0] & w_data3378w[0..0]), w_anode3664w[2..2]);
	w_anode3694w[] = ( (w_anode3694w[2..2] & (! w_data3378w[2..2])), (w_anode3694w[1..1] & w_data3378w[1..1]), (w_anode3694w[0..0] & (! w_data3378w[0..0])), w_anode3664w[2..2]);
	w_anode3704w[] = ( (w_anode3704w[2..2] & (! w_data3378w[2..2])), (w_anode3704w[1..1] & w_data3378w[1..1]), (w_anode3704w[0..0] & w_data3378w[0..0]), w_anode3664w[2..2]);
	w_anode3714w[] = ( (w_anode3714w[2..2] & w_data3378w[2..2]), (w_anode3714w[1..1] & (! w_data3378w[1..1])), (w_anode3714w[0..0] & (! w_data3378w[0..0])), w_anode3664w[2..2]);
	w_anode3724w[] = ( (w_anode3724w[2..2] & w_data3378w[2..2]), (w_anode3724w[1..1] & (! w_data3378w[1..1])), (w_anode3724w[0..0] & w_data3378w[0..0]), w_anode3664w[2..2]);
	w_anode3734w[] = ( (w_anode3734w[2..2] & w_data3378w[2..2]), (w_anode3734w[1..1] & w_data3378w[1..1]), (w_anode3734w[0..0] & (! w_data3378w[0..0])), w_anode3664w[2..2]);
	w_anode3744w[] = ( (w_anode3744w[2..2] & w_data3378w[2..2]), (w_anode3744w[1..1] & w_data3378w[1..1]), (w_anode3744w[0..0] & w_data3378w[0..0]), w_anode3664w[2..2]);
	w_data3378w[2..0] = data_wire[2..0];
END;
--VALID FILE
